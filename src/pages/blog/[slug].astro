---
import * as interfaces from '../../lib/interfaces.ts'
import {
  getPosts,
  getAllPosts,
  getRankedPosts,
  getPostBySlug,
  getPostsByTag,
  getBlock,
  getAllTags,
  getAllBlocksByBlockId,
  downloadFile,
} from '../../lib/notion/client.ts'
import {
  getPostLink,
  filePath,
  extractTargetBlocks,
} from '../../lib/blog-helpers.ts'
import Layout from '../../layouts/Layout.astro'
import PostDate from '../../components/PostDate.astro'
import PostTags from '../../components/PostTags.astro'
import PostTitle from '../../components/PostTitle.astro'
import PostBody from '../../components/PostBody.astro'
import PostRelativeLink from '../../components/PostRelativeLink.astro'
import { Icon } from 'astro-icon/components'
import PostUpdateDate from '../../components/PostUpdateDate.astro'
import ContentList from '../../components/ContentList.astro'
import '../../styles/dialog-toc.css'

export async function getStaticPaths() {
  const posts = await getAllPosts()
  return posts.map((post: interfaces.Post) => ({ params: { slug: post.Slug } }))
}

const { slug } = Astro.params

const post = await getPostBySlug(slug)
if (!post) {
  throw new Error('Post not found. slug: ${slug}')
}

const [blocks, allPosts, rankedPosts, recentPosts, tags, postsHavingSameTag] =
  await Promise.all([
    getAllBlocksByBlockId(post.PageId),
    getAllPosts(),
    getRankedPosts(),
    getPosts(5),
    getAllTags(),
    getPostsByTag(post.Tags[0]?.name, 6),
  ])

const fileAtacchedBlocks = extractTargetBlocks('image', blocks)
  .concat(extractTargetBlocks('file', blocks))
  .filter((block) => {
    if (!block) {
      return false
    }
    const imageOrFile = block.Image || block.File
    return imageOrFile && imageOrFile.File && imageOrFile.File.Url
  })

// Download files
await Promise.all(
  fileAtacchedBlocks
    .map(async (block) => {
      const expiryTime = (block.Image || block.File).File.ExpiryTime
      if (Date.parse(expiryTime) > Date.now()) {
        return Promise.resolve(block)
      }
      return getBlock(block.Id)
    })
    .map((promise) =>
      promise.then((block) => {
        let url!: URL
        try {
          url = new URL((block.Image || block.File).File.Url)
        } catch {
          console.log('Invalid file URL: ', (block.Image || block.File)?.File?.Url)
          return Promise.reject()
        }
        return Promise.resolve(url)
      })
    )
    .map((promise) => promise.then(downloadFile))
)

const currentPostIndex = allPosts.findIndex((post) => post.Slug === slug)
const prevPost = allPosts[currentPostIndex + 1]
const nextPost = allPosts[currentPostIndex - 1]

let ogImage = ''
if (post.FeaturedImage && post.FeaturedImage.Url) {
  ogImage = new URL(filePath(new URL(post.FeaturedImage.Url)), Astro.site)
}
---

<Layout
  title={post.Title}
  description={post.Excerpt}
  path={getPostLink(post.Slug)}
  ogImage={ogImage}
>
  <div slot="main">
    <div>
      <article>
        <PostTitle post={post} enableLink={false} />
        <div class="date-area">
          <PostDate post={post} />
          <PostUpdateDate post={post} />
        </div>
        <div class="tags-area">
          <Icon name="mingcute:tag-2-fill" />
          <PostTags post={post} />
        </div>
        <div class="body-area">
          <PostBody blocks={blocks} />
          <ContentList blocks={blocks} />
        </div>
      </article>

      <div class="share-area">
        <a id="js-share-x" class="share_button share_x" href="" target="_blank" rel="nofollow noopener noreferrer">
          <Icon name="simple-icons:x" />
        </a>
        <a id="js-share-bluesky" class="share_button share_bluesky" href="" target="_blank" rel="nofollow noopener noreferrer">
          <Icon name="simple-icons:bluesky" />
        </a>
        <a id="js-share-misskey" class="share_button share_misskey" href="" target="_blank" rel="nofollow noopener noreferrer">
          <Icon name="simple-icons:misskey" />
        </a>
        <a id="js-share-mastodon" class="share_button share_mastodon" href="" target="_blank" rel="nofollow noopener noreferrer">
          <Icon name="simple-icons:mastodon" />
        </a>
        <a id="js-share-threads" class="share_button share_threads" href="" target="_blank" rel="nofollow noopener noreferrer">
          <Icon name="simple-icons:threads" />
        </a>
        <a id="js-share-pocket" class="share_button share_pocket" href="" target="_blank" rel="nofollow noopener noreferrer">
          <Icon name="simple-icons:pocket" />
        </a>
        <a id="js-share-hatena" class="share_button share_hatena" href="" target="_blank" rel="nofollow noopener noreferrer">
          <Icon name="simple-icons:hatenabookmark" />
        </a>
      </div>
      <PostRelativeLink prevPost={prevPost} nextPost={nextPost} />
    </div>

    <button type="button" id="openButton">目次</button>
    <dialog id="modalDialog" class="dialog">
      <div id="dialogInputArea">
        <div id="dialog-container">
          <ContentList blocks={blocks} />
        </div>
      </div>
    </dialog>

  </div>
</Layout>

<style>
  .date-area {
    display: flex;
    align-items: center;
    margin-top: 0.8rem;
    gap: 0.8rem;
  }
  .tags-area {
    display: flex;
    align-items: center;
    margin-top: 0.4rem;
  }
  .tags-area svg {
    width: 18px;
    height: 18px;
    margin-right: 5px; 
  }
  .body-area {
    padding: 3rem 0 5rem;
  }
  @media (min-width: 801px) {
    .body-area {
      display: flex;
      gap: 60px;
    }
  }
  .share-area {
    display: flex;
    border-top: var(--border);
    padding: 30px 10px;
    gap: 15px;
  }
  @media (max-width: 640px) {
    .share-area {
      justify-content: center;
    }
  }
  .share-area a {
    height: 26px;
    color: var(--fg2);
  }
  .share-area svg {
    width: 26px;
    height: 26px;
  }
  
  @media (hover: hover) {
    [data-icon="simple-icons:x"]:hover {
      color: #10131a;
    }
    [data-icon="simple-icons:bluesky"]:hover {
      color: #1185fe;
    }
    [data-icon="simple-icons:misskey"]:hover {
      color: #96d04a;
    }
    [data-icon="simple-icons:mastodon"]:hover {
      color: #5d52e9;
    }
    [data-icon="simple-icons:threads"]:hover {
      color: #000000;
    }
    [data-icon="simple-icons:pocket"]:hover {
      color: #ef4056;
    }
    [data-icon="simple-icons:hatenabookmark"]:hover {
      color: #00a4de;
    }
  }
  @media (hover: none) {
    [data-icon="simple-icons:x"]:active {
      color: #10131a;
    }
    [data-icon="simple-icons:bluesky"]:active {
      color: #1185fe;
    }
    [data-icon="simple-icons:misskey"]:active {
      color: #96d04a;
    }
    [data-icon="simple-icons:mastodon"]:active {
      color: #5d52e9;
    }
    [data-icon="simple-icons:threads"]:active {
      color: #000000;
    }
    [data-icon="simple-icons:pocket"]:active {
      color: #ef4056;
    }
    [data-icon="simple-icons:hatenabookmark"]:active {
      color: #00a4de;
    }
  }
</style>

<script>
  import '../../scripts/dialog.js'

  const share_url = location.href;
  const share_title = document.title;
  const share_hostpath = location.host + location.pathname;

  const share_x = document.getElementById("js-share-x");
  share_x.setAttribute(
	  "href",
	  "https://x.com/share?url=" + share_url + "&text=" + share_title
  );

  const share_bluesky = document.getElementById("js-share-bluesky");
  share_bluesky.setAttribute(
	  "href",
	  "https://bsky.app/intent/compose?text=" + share_title + "+" + share_url
  );

  const share_misskey = document.getElementById("js-share-misskey");
  share_misskey.setAttribute(
	  "href",
	  "https://misskey-hub.net/share/?text=" + share_title + "+" + share_url
  );

  const share_mastodon = document.getElementById("js-share-mastodon");
  share_mastodon.setAttribute(
	  "href",
	  "https://mastoshare.net/share?text=" + share_title + "+" + share_url
  );

  const share_threads = document.getElementById("js-share-threads");
  share_threads.setAttribute(
	  "href",
	  "https://www.threads.net/intent/post?text=" + share_title + "+" + share_url
  );

  const share_pocket = document.getElementById("js-share-pocket");
  share_pocket.setAttribute(
	  "href",
	  "https://getpocket.com/edit?url=" + share_url
  );

  const share_hatena = document.getElementById("js-share-hatena");
  share_hatena.setAttribute(
	  "href",
	  "https://b.hatena.ne.jp/entry/s/" + share_hostpath
  );
</script>