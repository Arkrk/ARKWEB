---
import type { SelectProperty } from '../../../lib/interfaces.ts'
import { NUMBER_OF_POSTS_PER_PAGE } from '../../../server-constants.ts'
import {
  getPostsByTag,
  getRankedPosts,
  getAllTags,
  getNumberOfPagesByTag,
} from '../../../lib/notion/client.ts'
import Layout from '../../../layouts/Layout.astro'
import NoContents from '../../../components/NoContents.astro'
import PostDate from '../../../components/PostDate.astro'
import PostTags from '../../../components/PostTags.astro'
import PostTitle from '../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import Pagination from '../../../components/Pagination.astro'
import '../../../styles/post-grid.css'
import '../../../styles/notion-color.css'
import { Icon } from 'astro-icon/components'

export async function getStaticPaths() {
  const allTags = await getAllTags()
  return allTags.map((tag: SelectProperty) => ({ params: { tag: tag.name } }))
}

const { tag } = Astro.params

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByTag(tag, NUMBER_OF_POSTS_PER_PAGE),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPagesByTag(tag),
])

const currentTag = posts[0].Tags.find((t) => t.name === tag)
---

<Layout title={`${tag} の記事一覧`} path={`/blog/tag/${tag}`}>

  <div slot="main">
    <div class="head-wrapper">
      <h1>ブログ</h1>
      <span class={`tag ${currentTag.color}`}>{tag}</span>
    </div>
    
    <div class="card-wrapper">
    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        posts.map((post) => (
          <div class="grid-parts">
            <div key={post.Slug}>
              <figure class="grid-image">
                <PostFeaturedImage post={post} />
              </figure>
              <div class="grid-fix">
                <div class="grid-text">
                  <PostTitle post={post} />
                  <div class="date-area">
                    <PostDate post={post} />
                  </div>
                  <div class="tags-area">
                    <Icon name="mingcute:tag-2-fill" />
                    <PostTags post={post} />
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))
      )
    }
    </div>

    <footer>
      <Pagination tag={tag} currentPage={1} numberOfPages={numberOfPages} />
    </footer>
  </div>
</Layout>

<style>
  .head-wrapper {
    margin-bottom: 30px;
  }
  h1 {
    margin: 0 0 0.7rem;
    font-size: 2.25rem;
    font-weight: 700;
    color: var(--fg);
    line-height: 1.3;
  }
  @media (max-width: 640px) {
    h1 {
      font-size: 1.875rem;
    }
  }
  header {
    padding: 0;
  }
  span.tag {
    display: inline-block;
    border-radius: var(--radius);
    height: 40px;
    line-height: 40px;
    text-align: center;
    padding: 0 11px;
    background: rgba(227, 226, 224, 0.5);
    pointer-events: none;
  }
</style>