---
import { getPageLink } from '../lib/blog-helpers.ts'
import { Icon } from 'astro-icon/components'

export interface Props {
  currentPage: number
  numberOfPages: number
  tag: string
}

const { currentPage, numberOfPages, tag = '' } = Astro.props

const isFirstPage = currentPage === 1
const isLastPage = currentPage === numberOfPages

const prevPage = isFirstPage ? 1 : currentPage - 1
const nextPage = isLastPage ? numberOfPages : currentPage + 1

const layout = numberOfPages >= 7 ? 'pagelist-grid' : 'pagelist-flex'

let pages = []
for (let i = 1; i <= numberOfPages; i++) {
  pages.push(i)
}
---

<div class="pagination">
  <a href={getPageLink(prevPage, tag)} class={isFirstPage && 'inactive first-or-last'} id="prev">
    <Icon name="mingcute:left-line" />
  </a>
  <button type="button" id="pagelist-btn" aria-label="ページリスト">
    <span>{currentPage}</span>
    <Icon name="mingcute:down-line" />
  </button>
  <div class="pagelist-dropdown" id="pagelist-dropdown">
    <div id="pagelist-label">全&nbsp;{numberOfPages}&nbsp;ページ</div>
    <div class={layout} id="pagelist">
    {
      pages.map((p: number) => (
        <a href={getPageLink(p, tag)} class={p === currentPage && 'inactive current-page'}>
          {p}
        </a>
      ))
    }
    </div>
  </div>
  <a href={getPageLink(nextPage, tag)} class={isLastPage && 'inactive first-or-last'} id="next">
    <span>次のページ</span>
    <Icon name="mingcute:right-line" />
  </a>
</div>

<style>
   .pagination {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 45px auto 0;
  }
  .pagination a {
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--fg);
  }
  @media (hover: hover) {
    .pagination a:hover:not(.inactive) {
      background: var(--bg2);
    }
  }
  @media (hover: none) {
    .pagination a:active:not(.inactive) {
      background: var(--bg2);
    }
  }
  .pagination a.inactive {
    color: var(--bd);
    pointer-events: none;
  }
  .pagination > a {
    height: 50px;
    border: var(--border);
  }
  .pagination > a#prev {
    padding: 0 15px 0 18px;
    border-top-left-radius: 99px;
    border-bottom-left-radius: 99px;
  }
  .pagination > a#next {
    padding: 0 15px;
    border-top-right-radius: 99px;
    border-bottom-right-radius: 99px;
  }
  .pagination > a > span {
    padding: 0 8px 1.75px 0;
    font-size: 1rem;
  }
  .pagination > a > svg {
    width: 20px;
    height: 20px;
  }
  .pagination > button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
    color: var(--fg);
    border: none;
    background: none;
    height: 50px;
    min-width: 60px;
    border-top: var(--border);
    border-bottom: var(--border);
  }
  @media (hover: hover) {
    .pagination > button:hover {
      background: var(--bg2);
    }
  }
  @media (hover: none) {
    .pagination > button:active {
      background: var(--bg2);
    }
  }
  .pagination > button > span {
    padding-left: 3px;
    font-size: 1rem;
  }
  .pagination > button > svg {
    width: 16px;
    height: 16px;
  }

  .pagelist-dropdown {
    position: absolute;
    border: var(--border);
    box-shadow: var(--shadow);
    border-radius: var(--radius);
    background: var(--bg);
    overflow: hidden;
    visibility: hidden;
    opacity: 0;
    transform: translateY(0.5rem);
    transition: all 0.1s cubic-bezier(0.16, 1, 0.5, 1);
    z-index: 2;
    overflow: hidden;
    min-width: 150px;
    bottom: 40px;
  }
  .show {
    visibility: visible;
    opacity: 1;
    transform: translateY(0rem);
  }
  #pagelist a {
    min-width: 36px;
    height: 36px;
    border-radius: 50%;
  }
  #pagelist a.current-page {
    color: var(--ac);
    border: var(--border);
  }
  #pagelist-label {
    border-bottom: var(--border);
    text-align: center;
    font-size: 0.75rem;
    padding: 8px 0 9px;
  }
  .pagelist-flex, .pagelist-grid {
    gap: 0.5rem;
    padding: 0.75rem;
  }
  .pagelist-flex {
    display: flex;
    justify-content: center;
  }
  .pagelist-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
  }
</style>

<script>
  import { dropdown } from "../scripts/dropdown.js";
  dropdown('pagelist-btn', 'pagelist-dropdown');
</script>