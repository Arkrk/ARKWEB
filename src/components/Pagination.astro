---
import { getPageLink } from '../lib/blog-helpers.ts'
import { Icon } from 'astro-icon/components'

export interface Props {
  currentPage: number
  numberOfPages: number
  tag: string
}

const { currentPage, numberOfPages, tag = '' } = Astro.props

const isFirstPage = currentPage === 1
const isLastPage = currentPage === numberOfPages

const startPage = currentPage - 2 < 1 ? 1 : currentPage - 2
const endPage =
  currentPage + 2 > numberOfPages ? numberOfPages : currentPage + 2

let pages = []
for (let i = startPage; i <= endPage; i++) {
  pages.push(i)
}
---

<div class="pagination">
  <a href={getPageLink(1, tag)} class={isFirstPage && 'inactive first-or-last'}>
    <Icon name="mingcute:arrow-to-left-line" />
  </a>
  {
    pages.map((p: number) => (
      <a href={getPageLink(p, tag)} class={p === currentPage && 'inactive current-page'}>
        {p}
      </a>
    ))
  }
  <a href={getPageLink(numberOfPages, tag)} class={isLastPage && 'inactive first-or-last'}>
    <Icon name="mingcute:arrow-to-right-line" />
  </a>
</div>

<style>
   .pagination {
    display: flex;
    width: fit-content;
    margin: 30px auto 0;
    border: 1px solid var(--border);
    border-radius: 8px;
    justify-content: center;
    align-items: center;
    overflow: hidden;
  }
  .pagination a {
    display: flex;
    width: 45px;
    height: 45px;
    background: var(--bg);
    color: var(--fg);
    border-right: 1px solid var(--border);
    font-weight: 500;
    font-size: 0.9rem;
    align-items: center;
    justify-content: center;
  }
  .pagination a:last-child {
    border-right: unset;
  }
  .pagination a:hover:not(.inactive) {
    background: var(--bg2);
  }
  .pagination a.inactive {
    pointer-events: none;
  }
  .pagination a.first-or-last {
    color: var(--border);
  }
  .pagination a.current-page {
    color: var(--fg);
    background: #ebebeb;
  }
  .pagination a svg {
    width: 20px;
    height: 20px;
  }
</style>
