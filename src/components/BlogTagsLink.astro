---
import type { SelectProperty } from '../lib/interfaces.ts'
import { getTagLink } from '../lib/blog-helpers.ts'
import NoContents from './NoContents.astro'
import '../styles/notion-color.css'

export interface Props {
  heading: string
  tags: SelectProperty[]
}

const { tags } = Astro.props
---

<div class="blog-tags-link">
  {
    tags.length === 0 ? (
      <NoContents contents={tags} />
    ) : (
      <ul class="Box-Container">
        {tags.map((tag: SelectProperty) => (
          <li>
            <a href={getTagLink(tag.name)}>
              <span>{tag.name}</span>
            </a>
          </li>
        ))}
      </ul>
    )
  }
</div>

<style>
  ul {
  	display: flex;
    list-style-type: none;
    padding: 0 0 30px 0;
    gap: 8px;
    overflow-x: scroll;
    white-space: nowrap;
    scrollbar-width: none;
  }
  ul::-webkit-scrollbar {
    display: none;
  }
  @media (max-width: 640px) {
    div {
    	margin-left: calc(-50vw + 50%);
      margin-right: calc(-50vw + 50%);
    }
    ul {
      padding-left: 18px;
    }
    ul:last-child {
      padding-right: 18px;
    }
  }
  a {
    display: flex;
    align-items: center;
    height: 40px;
    padding: 0 10px;
    border: var(--border);
    border-radius: var(--radius);
    overflow: hidden;
    color: var(--fg);
  }
  @media (hover: hover) {
    a:hover {
      background: var(--bg2);
    }
  }
  @media (hover: none) {
    a:active {
      background: var(--bg2);
    }
  }
  svg {
    margin-left: 10px;
  }
</style>

<script>
  const scrollElement = document.querySelector(".Box-Container");

  scrollElement.addEventListener("wheel", (e) => {
    if (Math.abs(e.deltaY) < Math.abs(e.deltaX)) return;
    e.preventDefault();
    scrollElement.scrollLeft += e.deltaY;
  });
</script>