---
import * as interfaces from '../../lib/interfaces.ts'
import { buildHeadingId } from '../../lib/blog-helpers.ts'
import { snakeToKebab } from '../../lib/style-helpers.ts'
import '../../styles/notion-color.css'

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props
---

<div class="table-of-contents">
  <h3>目次</h3>
  {
    headings.map((headingBlock: interfaces.Block) => {
      const heading =
        headingBlock.Heading1 || headingBlock.Heading2 || headingBlock.Heading3

      let indentClass = ''
      if (headingBlock.Type === 'heading_2') {
        indentClass = 'indent-1'
      } else if (headingBlock.Type === 'heading_3') {
        indentClass = 'indent-2'
      }

      return (
        <a
          href={`#${buildHeadingId(heading)}`}
          class={`table-of-contents ${snakeToKebab(
            block.TableOfContents.Color
          )} ${indentClass}`}
        >
          {heading.RichTexts.map(
            (richText: interfaces.RichText) => richText.PlainText
          ).join('')}
        </a>
      )
    })
  }
</div>

<style>
  .table-of-contents > a {
    display: block;
    line-height: 1.8rem;
    font-size: 0.9rem;
    font-weight: 500;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .table-of-contents > a:hover {
    background: #f7f6f3;
  }
  .table-of-contents > a.indent-1 {
    padding-left: 1.5rem;
  }
  .table-of-contents > a.indent-2 {
    padding-left: 3rem;
  }
  h3 {
    margin: 3rem 0 0.7rem;
    color: var(--fg);
    font-size: 1.8rem;
    border-bottom: 1px solid var(--border);
    padding-bottom: 0.5rem;
  }
  @media (max-width: 640px) {
    h3 {
      font-size: 1.3rem;
    }
  }
  @media (min-width: 801px) {
    .table-of-contents {
      display: none;
    }
  }
</style>
