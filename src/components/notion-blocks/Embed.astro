---
import * as interfaces from '../../lib/interfaces.ts'
import {
  isTweetURL,
  isBlueskyURL,
  isTikTokURL,
  isInstagramURL,
  isSpotifyURL,
  isAppleMusicURL,
  isPinterestURL,
  isCodePenURL,
  isCircuitSimulatorAppletURL,
} from '../../lib/blog-helpers.ts'
import Bookmark from './Bookmark.astro'
import TweetEmbed from './TweetEmbed.astro'
import BlueskyEmbed from './BlueskyEmbed.astro'
import TikTokEmbed from './TikTokEmbed.astro'
import InstagramEmbed from './InstagramEmbed.astro'
import SpotifyEmbed from './SpotifyEmbed.astro'
import AppleMusicEmbed from './AppleMusicEmbed.astro'
import PinterestEmbed from './PinterestEmbed.astro'
import CodePenEmbed from './CodePenEmbed.astro'
import CircuitSimulatorAppletEmbed from './CircuitSimulatorAppletEmbed.astro'

export interface Props {
  block: interfaces.Block
  urlMap: { [key: string]: string }
}

const { block, urlMap } = Astro.props

let url: URL | undefined = undefined;
try {
  if (block.Embed?.Url) {
    url = new URL(block.Embed.Url);
  }
} catch (err) {
  console.log(err)
}
---

{
  url ? (
    isTweetURL(url) ? (
      <TweetEmbed url={url} />
    ) : isBlueskyURL(url) ? (
      <BlueskyEmbed url={url} />
    ) : isTikTokURL(url) ? (
      <TikTokEmbed url={url} />
    ) : isInstagramURL(url) ? (
      <InstagramEmbed url={url} />
    ) : isSpotifyURL(url) ? (
      <SpotifyEmbed url={url} />
    ) : isAppleMusicURL(url) ? (
      <AppleMusicEmbed url={url} />
    ) : isPinterestURL(url) ? (
      <PinterestEmbed url={url} />
    ) : isCodePenURL(url) ? (
      <CodePenEmbed url={url} />
    ) : isCircuitSimulatorAppletURL(url) ? (
      <CircuitSimulatorAppletEmbed url={url} />
    ) : (
      <Bookmark block={block} urlMap={urlMap} />
    )
  ) : null
}
